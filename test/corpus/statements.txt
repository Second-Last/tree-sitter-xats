==========
staload with rename
==========

#staload wow = "wow.dats"

---

(source_file
	(staload_statement
		(kwd_staload)
		(ident)
		(symbol)
		(string_literal)))


==============
include
==============

#include "wtfmate"

---

(source_file (include_statement (kwd_include) (string_literal)))


==============
includes different line
==============

#include "hi" #include "wow"

---

(source_file
	(include_statement
		(kwd_include)
		(string_literal)
		(MISSING "include_statement_token1"))
	(include_statement
		(kwd_include)
		(string_literal)))


=============
multiple includes
=============

#include "hello"
#include "hi"

---

(source_file
	(include_statement
		(kwd_include)
		(string_literal))
	(include_statement
		(kwd_include)
		(string_literal)))


=============
define
=============

#define KINFIX0 0
#define KINFIX1 (1)

#define
ATS_PACKNAME
"ATS3.XANADU.xatsopt-20220500"

---

(source_file
	(define_statement
		(kwd_define)
		(ident)
		(int_literal))
	(define_statement
		(kwd_define)
		(ident)
		(int_literal))
	(define_statement
		(kwd_define)
		(ident)
		(string_literal)))


==========
multiple val declarations
==========

val
T0SRP_INFIX0 = T_SRP_FIXITY(KINFIX0)
and
T0SRP_INFIXL = T_SRP_FIXITY(KINFIXL)
and
T0SRP_INFIXR = T_SRP_FIXITY(KINFIXR)
and
T0SRP_PREFIX = T_SRP_FIXITY(KPREFIX)
and
T0SRP_PSTFIX = T_SRP_FIXITY(KPSTFIX)

---

(source_file
	(val_decl_statement
		(kwd_val)
		(ident)
		(invoke_expr
			(ident)
			(ident))
		(ident)
		(invoke_expr
			(ident)
			(ident))
		(ident)
		(invoke_expr
			(ident)
			(ident))
		(ident)
		(invoke_expr
			(ident)
			(ident))
		(ident)
		(invoke_expr
			(ident)
			(ident))))


==========
val with comments
==========

val AMP_symbl: symbl//symbl("&")
val BAR_symbl: symbl//symbl("|")

---

(source_file
	(val_intro_statement
		(kwd_val)
		(ident)
		(ident)
		(comment))
	(val_intro_statement
		(kwd_val)
		(ident)
		(ident)
		(comment)))


==========
empty/side effect val declaration
==========

val () = print("Hello World!")

---

(source_file
	(val_decl_statement
		(kwd_val)
		(unit_literal)
		(invoke_expr
			(ident)
			(string_literal))))

==========
function intros
==========

(* ****** ****** *)
//
fun
symbl_search_opt
(nam: strn): optn_vt(symbl)
fun
symbl_insert_any(sym: symbl): void
//
(* ****** ****** *)
//

---

(source_file
	(comment)
	(comment)
	(fun_intro_statement
		(kwd_fun)
		(ident)
		(ident)
		(ident)
		(invoke_expr
			(ident)
			(ident)))
	(fun_intro_statement
		(kwd_fun)
		(ident)
		(ident)
		(ident)
		(ident)
		(comment)
		(comment)
		(comment)))
